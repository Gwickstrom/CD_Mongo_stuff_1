Mongo OPERATORS

Operators are an important part of MongoDB. You've already seen the $set operator in the update method, 
so you should be aware of their existence. Since our queries are more method-based and not typed syntax like regular SQL,
we need to pack more functionality into the documents we use to query our databases. Enter Operators.
Operators allow you to 'operate' on the data. Let's say I have the following documents in ac collection
called dojos that look like this:

db.dojos.find().pretty()
...


If I wanted to get all the Dojos whose number of students is greater than 15, I would run the following:

db.dojos.find({number_of_students: {$gt: 15}})
db.dojos.find({number_of_stundets: {$gt: 15}}).pretty()


$gt greater than
$gte greater than or equal to
$lt
$lte
$in (in array) Use to find documents who have a particular value within an array.


And we wanted to add an element in the interests array. The operator we would use is called the $push operator, which should sound very familiar. 
To add the interest 'snowboarding' to the student document, we would run...

db.students.update({_id: ObjectId("5463d871a6a96d5ed6252f4d")}, {$push: {interests: 'snowboarding'}})


The $push operator is a key of the update document, and its value is another document with a key of interests,
and a value of 'snowboarding'. Spend some time going over this.

Couple of array update operators to get familiar with:

$push Push to an array contained within a document.

$pop Removes either the first or last element from an array

EX:
db.COLLECTION.update({QUERY}, {$pop: {array_key: (1 or -1)}})

Use 1 for the last item in the array, -1 for the first item.

$addToSet  It functions just like $push. However, $addToSet only adds to the specified array
if the value doesn't already exist (thereby preventing duplicate entries).

$pull Removes a specified value from an array, unlike $pop, which removes by location. Ex:

db.COLLECTION.update({QUERY}, {$pull: {array_key: VALUE}})

This will remove all instances of VALUE from the documents with the array specified by the array_key that match QUERY.


